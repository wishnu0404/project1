<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="3" ignored="0" total="12" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-05T21:29:03 IST" name="Suite" finished-at="2025-08-05T21:36:10 IST" duration-ms="427494">
    <groups>
      <group name="group2">
        <method signature="LoginPagetestClass.verifyInvalidlLogin(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" name="verifyInvalidlLogin" class="testClasses.LoginPagetestClass"/>
      </group> <!-- group2 -->
      <group name="group1">
        <method signature="LoginPagetestClass.verifySuccessfullLogin()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" name="verifySuccessfullLogin" class="testClasses.LoginPagetestClass"/>
        <method signature="LoginPagetestClass.verifyunSuccessfullLogin()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" name="verifyunSuccessfullLogin" class="testClasses.LoginPagetestClass"/>
      </group> <!-- group1 -->
    </groups>
    <test started-at="2025-08-05T21:29:03 IST" name="Test" finished-at="2025-08-05T21:36:10 IST" duration-ms="427494">
      <class name="testClasses.LoginPagetestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:03 IST" name="beforeMethod" finished-at="2025-08-05T21:29:06 IST" duration-ms="3774" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verfyUsernameTextboxshowinghintornot()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:06 IST" name="verfyUsernameTextboxshowinghintornot" finished-at="2025-08-05T21:29:07 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verfyUsernameTextboxshowinghintornot -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:07 IST" name="afterMethod" finished-at="2025-08-05T21:29:07 IST" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:07 IST" name="beforeMethod" finished-at="2025-08-05T21:29:10 IST" duration-ms="3814" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCorrectApplicationisloadingwhileHitting_the_URL()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:10 IST" name="verifyCorrectApplicationisloadingwhileHitting_the_URL" finished-at="2025-08-05T21:29:11 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCorrectApplicationisloadingwhileHitting_the_URL -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:11 IST" name="afterMethod" finished-at="2025-08-05T21:29:11 IST" duration-ms="176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:12 IST" name="beforeMethod" finished-at="2025-08-05T21:29:21 IST" duration-ms="9004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyInvalidlLogin(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:21 IST" name="verifyInvalidlLogin" data-provider="unsuccessfullLogin" finished-at="2025-08-05T21:29:22 IST" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[adminn]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidlLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:22 IST" name="afterMethod" finished-at="2025-08-05T21:29:22 IST" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:22 IST" name="beforeMethod" finished-at="2025-08-05T21:29:25 IST" duration-ms="2956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyInvalidlLogin(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:25 IST" name="verifyInvalidlLogin" data-provider="unsuccessfullLogin" finished-at="2025-08-05T21:29:26 IST" duration-ms="869" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234567]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidlLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:26 IST" name="afterMethod" finished-at="2025-08-05T21:29:26 IST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:26 IST" name="beforeMethod" finished-at="2025-08-05T21:29:29 IST" duration-ms="2903" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyInvalidlLogin(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:29 IST" name="verifyInvalidlLogin" data-provider="unsuccessfullLogin" finished-at="2025-08-05T21:29:30 IST" duration-ms="964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[adm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1256]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidlLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:30 IST" name="afterMethod" finished-at="2025-08-05T21:29:30 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:30 IST" name="beforeMethod" finished-at="2025-08-05T21:29:33 IST" duration-ms="3349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verifySuccessfullLogin()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:33 IST" name="verifySuccessfullLogin" finished-at="2025-08-05T21:29:37 IST" duration-ms="4318" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testClasses.LoginPagetestClass.verifySuccessfullLogin(LoginPagetestClass.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:37 IST" name="afterMethod" finished-at="2025-08-05T21:29:38 IST" duration-ms="176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:38 IST" name="beforeMethod" finished-at="2025-08-05T21:29:43 IST" duration-ms="5580" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verifySuccessfullLogin()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:43 IST" name="verifySuccessfullLogin" finished-at="2025-08-05T21:29:48 IST" duration-ms="4618" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testClasses.LoginPagetestClass.verifySuccessfullLogin(LoginPagetestClass.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:48 IST" name="afterMethod" finished-at="2025-08-05T21:29:48 IST" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:48 IST" name="beforeMethod" finished-at="2025-08-05T21:29:52 IST" duration-ms="3932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verifySuccessfullLogin()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:29:52 IST" name="verifySuccessfullLogin" finished-at="2025-08-05T21:35:52 IST" duration-ms="359648" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[java.net.http.HttpTimeoutException: request timed out
Build info: version: '4.28.1', revision: '73f5ad48a2'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [076fffc18517175be22ddab6620b03e0, clickElement {id=f.C4FDF0AD411E6D0DC93D9B95D63B6482.d.040CF6056217556A250B04F69F498D80.e.9}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.184, chrome: {chromedriverVersion: 138.0.7204.183 (e90faf484dd..., userDataDir: C:\Users\vishn\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55233}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55233/devtoo..., se:cdpVersion: 138.0.7204.184, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (076fffc18517175be22ddab6620b03e0)] -> xpath: //button[@type='submit']]
Session ID: 076fffc18517175be22ddab6620b03e0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: java.net.http.HttpTimeoutException: request timed out
Build info: version: '4.28.1', revision: '73f5ad48a2'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [076fffc18517175be22ddab6620b03e0, clickElement {id=f.C4FDF0AD411E6D0DC93D9B95D63B6482.d.040CF6056217556A250B04F69F498D80.e.9}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.184, chrome: {chromedriverVersion: 138.0.7204.183 (e90faf484dd..., userDataDir: C:\Users\vishn\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55233}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55233/devtoo..., se:cdpVersion: 138.0.7204.184, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (076fffc18517175be22ddab6620b03e0)] -> xpath: //button[@type='submit']]
Session ID: 076fffc18517175be22ddab6620b03e0
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:495)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.lambda$executeAsync$1(JdkHttpClient.java:384)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.http.HttpTimeoutException: request timed out
at java.net.http/jdk.internal.net.http.HttpClientImpl.send(HttpClientImpl.java:949)
at java.net.http/jdk.internal.net.http.HttpClientFacade.send(HttpClientFacade.java:133)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:456)
... 8 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:35:52 IST" name="afterMethod" finished-at="2025-08-05T21:35:53 IST" duration-ms="1219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:35:53 IST" name="beforeMethod" finished-at="2025-08-05T21:35:55 IST" duration-ms="2141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfullLogin()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:35:55 IST" name="verifySuccessfullLogin" finished-at="2025-08-05T21:36:00 IST" duration-ms="5490" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testClasses.LoginPagetestClass.verifySuccessfullLogin(LoginPagetestClass.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:36:01 IST" name="afterMethod" finished-at="2025-08-05T21:36:01 IST" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:36:01 IST" name="beforeMethod" finished-at="2025-08-05T21:36:04 IST" duration-ms="2715" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_resetPageIsDisplayedWhenClickingForgotPassword()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:36:04 IST" name="verify_resetPageIsDisplayedWhenClickingForgotPassword" finished-at="2025-08-05T21:36:04 IST" duration-ms="563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_resetPageIsDisplayedWhenClickingForgotPassword -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:36:04 IST" name="afterMethod" finished-at="2025-08-05T21:36:04 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:36:04 IST" name="beforeMethod" finished-at="2025-08-05T21:36:07 IST" duration-ms="2193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_the_Remebrmecheckboxischeckedby_Default()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:36:07 IST" name="verify_the_Remebrmecheckboxischeckedby_Default" finished-at="2025-08-05T21:36:07 IST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_the_Remebrmecheckboxischeckedby_Default -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:36:07 IST" name="afterMethod" finished-at="2025-08-05T21:36:07 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:36:07 IST" name="beforeMethod" finished-at="2025-08-05T21:36:09 IST" duration-ms="2551" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyunSuccessfullLogin()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:36:09 IST" name="verifyunSuccessfullLogin" finished-at="2025-08-05T21:36:10 IST" duration-ms="754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyunSuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginPagetestClass@18317edc]" started-at="2025-08-05T21:36:10 IST" name="afterMethod" finished-at="2025-08-05T21:36:10 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClasses.LoginPagetestClass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
